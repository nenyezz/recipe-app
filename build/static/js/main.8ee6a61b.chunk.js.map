{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2PAsBeA,EAlBA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,SAASC,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,YACrC,OACC,sBAAKC,UAAWC,IAAMC,OAAtB,UACC,6BAAKN,IACL,6BACEG,EAAYI,KAAI,SAAAC,GAAU,OAC1B,6BAAKA,EAAWC,YAIT,4CAAeR,KAExB,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCwCjCC,EApDH,WACZ,IAEA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACTC,MACE,CAACH,IACJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACKC,MAAK,0CACSL,EADT,mBATd,WASc,oBARb,qCAOG,cACZM,EADY,gBAGCA,EAASC,OAHV,OAGZC,EAHY,OAIlBX,EAAWW,EAAKC,MAJE,2CAAH,qDAiBhB,OACC,sBAAKvB,UAAU,MAAf,UACA,uBAAMA,UAAU,cAAcwB,SARb,SAAAC,GACjBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAKV,UACC,uBAAOb,UAAU,aAAa2B,KAAK,OAAOC,MAAOhB,EAChDiB,SAbkB,SAAAJ,GACpBZ,EAAUY,EAAEK,OAAOF,UAalB,wBAAQ5B,UAAU,gBAAgB2B,KAAK,SAAvC,uBAID,qBAAK3B,UAAU,UAAf,SACEU,EAAQP,KAAI,SAAAD,GAAM,OACnB,cAAC,EAAD,CAECN,MAAOM,EAAOA,OAAO6B,MACrBlC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO6B,gBC9BPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.8ee6a61b.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) =>{\r\n\treturn(\r\n\t\t<div className={style.recipe}>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<ol>\r\n\t\t\t\t{ingredients.map(ingredient=>(\r\n\t\t\t\t\t<li>{ingredient.text}</li>\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t\t\r\n            <p>Calories : {calories}</p>\r\n\r\n\t\t\t<img className={style.image} src={image} alt=\"\"/>\r\n\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport Recipe from './Recipe';\n\nconst App = () => {\nconst APP_ID = '6b9ab1bc';\nconst APP_KEY = '7f1762b0c32dda1d0b7bff0de3e066bc';\nconst [recipes, setRecipes] = useState([]);\nconst [search, setSearch] = useState(\"\");\nconst [query, setQuery] = useState(\"chicken\");\nuseEffect(() => {\n\tgetRecipes();\n}, [query])\nconst getRecipes = async () => {\n\tconst response = await fetch\n\t\t(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n\tconst data = await response.json();\n\tsetRecipes(data.hits);\n\t// console.log(data);\n\n};\nconst updateSearch = e => {\n\tsetSearch(e.target.value);\n};\nconst getSearch = e => {\n\te.preventDefault();\n\tsetQuery(search);\n\tsetSearch(\"\");\n}\n\nreturn (\n\t<div className=\"App\">\n\t<form className=\"search-form\" onSubmit={getSearch} >\n\t\t<input className=\"search-bar\" type=\"text\" value={search}\n\t\t\tonChange={updateSearch} />\n\t\t<button className=\"search-button\" type=\"submit\" >\n\t\t\tSearch\n\t\t</button>\n\t</form>\n\t<div className=\"recipes\">\n\t\t{recipes.map(recipe => (\n\t\t<Recipe\n\t\t\tkey={recipe.recipe.label}\n\t\t\ttitle={recipe.recipe.label}\n\t\t\tcalories={recipe.recipe.calories}\n\t\t\timage={recipe.recipe.image}\n\t\t\tingredients={recipe.recipe.ingredients}\n\t\t/>\n\n\t\t))}\n\t</div>\n\n\t</div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__NMbvs\",\"image\":\"recipe_image__3mI2u\"};"],"sourceRoot":""}